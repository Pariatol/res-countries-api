{"version":3,"sources":["countryPage.js","Header.js","Countries.js","SearchForCountry.js","FilterByRegion.js","App.js","index.js"],"names":["CountryPage","props","name","countryInfos","country","countries","find","element","className","style","isDarkMode","darkModeElement","to","class","onClick","setSearchedCountry","darkModeButton","src","flag","nativeName","stylePopulationNb","population","region","subregion","capital","topLevelDomain","map","item","index","length","currencies","languages","borders","alpha","list","alpha3Code","replaceName","Header","darkHeader","textDecoration","color","setDarkMode","Countries","searchedRegion","slice","linkStyleDark","linkStyleLight","key","filter","SearchForCountry","useState","searchResult","setSearchResult","onSubmit","e","preventDefault","document","querySelector","inputCountry","value","undefined","searchedCountry","console","log","type","placeholder","searchDark","FilterByRegion","onclick","target","id","classList","remove","toggle","setSearchedRegion","App","setListCountries","backgroundColor","boxShadow","borderBottom","borderRadius","nb","toString","split","reverse","join","counter","toReturn","i","useEffect","Promise","resolve","reject","fetch","then","data","json","listCountries","catch","err","path","Fragment","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3d8fa8f5.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\n\r\nfunction CountryPage(props){\r\n\r\n    const getCountryInfos =  (name,list) => {\r\n        return  list.find(element => element.name ===name)\r\n    }\r\n\r\n    const replaceName = (alpha,list) => {\r\n        let toReturn = list.find(element => element.alpha3Code === alpha);\r\n        return toReturn.name;\r\n    }\r\n\r\n    let countryInfos = getCountryInfos(props.country,props.countries);\r\n\r\n        return(\r\n        <div className=\"countryPage\" style={props.isDarkMode?props.darkModeElement:null}>\r\n\r\n            <div className=\"countryWrap\">\r\n                <Link to=\"/\">\r\n                <button class=\"backButton\" onClick={()=>props.setSearchedCountry(\"\")} style={props.isDarkMode?props.darkModeButton:null}><i class=\"fas fa-long-arrow-alt-left\"></i>&nbsp;&nbsp;&nbsp;Back</button>\r\n                </Link>\r\n                <div className=\"countryPagePic\">\r\n                    <img className=\"flagPic\" src={countryInfos.flag}/>\r\n                </div>\r\n\r\n                <div className=\"countryDescription\">\r\n                    <div className=\"countryDescriptionWrapper\">\r\n\r\n                    <div className=\"countryName\">\r\n                        {countryInfos.name}\r\n                    </div>\r\n                    <div className=\"countryDescriptionInfos\">\r\n                        <div className=\"colInfos1\">\r\n                            <div className=\"nativeName infos\">\r\n                                <span className=\"boldWord\">Native Name: </span>{countryInfos.nativeName}\r\n                            </div>\r\n                            <div className=\"population infos\">\r\n                            <span className=\"boldWord\">Population: </span>{props.stylePopulationNb(countryInfos.population)}\r\n                            </div>\r\n                            <div className=\"region infos\">\r\n                            <span className=\"boldWord\">Region: </span>{countryInfos.region}\r\n                            </div>\r\n                            <div className=\"subregion infos\">\r\n                            <span className=\"boldWord\">Sub Region: </span>{countryInfos.subregion}\r\n                            </div>\r\n                            <div className=\"capital infos\">\r\n                            <span className=\"boldWord\">Capital: </span>{countryInfos.capital}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"colInfos2\">\r\n                            <div className=\"topLevelDomain infos\">\r\n                            <span className=\"boldWord\">Top Level Domain: </span>{countryInfos.topLevelDomain.map((item,index)=>{\r\n                                    return index===countryInfos.topLevelDomain.length-1?<span>{item}</span>:<span>{item}, </span>\r\n                                })}\r\n                            </div>\r\n\r\n                            <div className=\"currencies infos\">\r\n                            <span className=\"boldWord\">Currencies: </span>{countryInfos.currencies.map((item,index)=>{\r\n                                    return index===countryInfos.currencies.length-1?<span>{item.name}</span>:<span>{item.name}, </span>\r\n                                })}\r\n                            </div>\r\n\r\n                            <div className=\"languages infos\">\r\n                            <span className=\"boldWord\">Languages: </span>{countryInfos.languages.map((item,index)=>{\r\n                                    return index===countryInfos.languages.length-1?<span>{item.name}</span>:<span>{item.name}, </span>\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"countryDescriptionBorders\">\r\n                        <span className=\"boldWord borderTitle\">Border Countries:&nbsp;&nbsp;&nbsp;&nbsp;</span><div className=\"borderTitleResponsive boldWord\">Border Countries:</div>\r\n                        <div className=\"borderWrap\">\r\n                            {countryInfos.borders.map((item,index)=>{\r\n                                return <div className=\"borderCountry\">{replaceName(item,props.countries)}</div>\r\n\r\n                            })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n                            <div className=\"optionsEmulation hiddenOption\"></div>\r\n        </div>\r\n        );\r\n}\r\n\r\nexport default CountryPage","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nfunction Header(props){\r\n\r\n  \r\n    let noLinkStyle = {\r\n      textDecoration:\"none\",\r\n      color:\"black\"\r\n    }\r\n  \r\n  \r\n      return(\r\n        <header className=\"head\"  style={props.isDarkMode?props.darkHeader:null}>\r\n          <div className=\"headWrapper\">\r\n          <Link to=\"/\" style={noLinkStyle}>\r\n  \r\n            <div className=\"headTitle\" style={props.isDarkMode?props.darkHeader:null}>\r\n              Where in the world?\r\n            </div>\r\n            </Link>\r\n  \r\n            <div className=\"darkModeToggler\" onClick={()=>props.setDarkMode(!props.isDarkMode)}>\r\n              <i className=\"far fa-moon\"></i>&nbsp;Dark Mode\r\n            </div>\r\n          </div>\r\n        </header>\r\n      );\r\n    }\r\n\r\n    export default Header;","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nfunction Countries(props){\r\n\r\n\r\n    let noLinkStyle = {\r\n      textDecoration:\"none\",\r\n      color:\"black\"\r\n    }\r\n\r\n\r\n    return(\r\n      <div className=\"countries\">\r\n        {\r\n          props.searchedRegion===\"\"?\r\n          props.countries.slice(0,9).map((item,index)=>{\r\n            return(\r\n            <Link to={`/${item.name}`}  style={props.isDarkMode?props.linkStyleDark:props.linkStyleLight}>\r\n            {index===8?<div className=\"hiddenDiv\"></div>:\r\n            <div className=\"country\" style={props.isDarkMode?props.darkModeElement:null} key={item.name}>\r\n              <div className=\"imgWrap\"><img className=\"countryPic\" src={item.flag}/></div>\r\n              <div className=\"aboutCountry\">\r\n                <div className=\"countryName\">{item.name}</div>\r\n                <div className=\"countryPopulation countryInfo\"><span className=\"boldWord\">Population:</span> {props.stylePopulationNb(item.population)}</div>\r\n                <div className=\"countryRegion countryInfo\"><span className=\"boldWord\">Region:</span> {item.region}</div>\r\n                <div className=\"countryCapital countryInfo\"><span className=\"boldWord\">Capital:</span> {item.capital}</div>\r\n              </div>\r\n  \r\n            </div>\r\n            }\r\n            </Link>\r\n            \r\n            );\r\n            \r\n          }):props.countries.filter(item=>item.region===props.searchedRegion).map((item,index)=>{\r\n            return(\r\n            <Link to={`/${item.name}`}  style={props.isDarkMode?props.linkStyleDark:props.linkStyleLight}>\r\n            {index===props.countries.filter(item=>item.region===props.searchedRegion).length-1?<div className=\"hiddenDiv\"></div>:\r\n            <div className=\"country\" key={item.name} style={props.isDarkMode?props.darkModeElement:null} key={item.name}>\r\n              <div className=\"imgWrap\"><img className=\"countryPic\" src={item.flag}/></div>\r\n              <div className=\"aboutCountry\">\r\n                <div className=\"countryName\">{item.name}</div>\r\n                <div className=\"countryPopulation countryInfo\"><span className=\"boldWord\">Population:</span> {props.stylePopulationNb(item.population)}</div>\r\n                <div className=\"countryRegion countryInfo\"><span className=\"boldWord\">Region:</span> {item.region}</div>\r\n                <div className=\"countryCapital countryInfo\"><span className=\"boldWord\">Capital:</span> {item.capital}</div>\r\n              </div>\r\n  \r\n            </div>\r\n            }\r\n            </Link>\r\n            \r\n            );\r\n            \r\n          })\r\n        }\r\n  \r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default Countries;","import React, { useState, useEffect } from 'react';\r\n\r\nfunction SearchForCountry(props){\r\n\r\n    const [searchResult, setSearchResult] = useState(\"\");\r\n\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      props.setSearchedCountry(document.querySelector('form').inputCountry.value);\r\n      props.countries.find(element=>element.name===props.searchedCountry)===undefined?setSearchResult(\"Invalid country name\"):setSearchResult(\"Search for a country...\");\r\n      console.log(searchResult);\r\n    }\r\n\r\n    return(\r\n      <div className=\"searchForCountry\">\r\n        <form onSubmit={handleSubmit} >\r\n        <input type=\"text\" name=\"inputCountry\" placeholder=\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Search for a country...\" className={props.isDarkMode?\"inputDark\":null} style={props.isDarkMode?props.searchDark:null}/>\r\n        <i  className={props.isDarkMode?\"fas fa-search searchDarkMode\":\"fas fa-search\"}></i>\r\n        </form>\r\n        {props.searchedCountry!==\"\"?props.countries.find(element=>element.name===props.searchedCountry)===undefined?<div class=\"searchResult\">No Country Found. Try Again.</div>:null:null}\r\n\r\n      </div>\r\n  \r\n    )\r\n  }\r\n\r\n  export default SearchForCountry;","import React from 'react';\r\n  \r\n  function FilterByRegion(props){\r\n  \r\n    const handleClick = () => {    \r\n        document.querySelector('.optionsEmulation').classList.toggle('displayToggle');\r\n    }\r\n\r\n  \r\n    return(\r\n      <div className=\"filterByRegion\">\r\n  \r\n        {document.onclick = function(e){\r\n                 if(e.target.id !== 'me'){\r\n                    document.querySelector('.optionsEmulation').classList.remove('displayToggle');\r\n                 }\r\n        }}\r\n        <div class=\"selectEmulation\" id=\"me\"  onClick={handleClick} style={props.isDarkMode?props.searchDark:null}>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Filter by Region\r\n              <i class=\"fas fa-sort-down\"></i>\r\n  \r\n          <div class=\"optionsEmulation\" style={props.isDarkMode?props.searchDark:null}>\r\n            <div onClick={()=>props.setSearchedRegion('Africa')} class=\"Africa option\">Africa</div>\r\n            <div onClick={()=>props.setSearchedRegion('Americas')} class=\"America option\">America</div>\r\n            <div onClick={()=>props.setSearchedRegion('Asia')} class=\"Asia option\">Asia</div>\r\n            <div onClick={()=>props.setSearchedRegion('Europe')} class=\"Europe option\">Europe</div>\r\n            <div onClick={()=>props.setSearchedRegion('Oceania')} class=\"Oceania option\">Oceania</div>\r\n  \r\n  \r\n  \r\n          </div>\r\n          \r\n        </div>\r\n  \r\n      </div>\r\n  \r\n    )\r\n  }\r\n\r\n  export default FilterByRegion;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nimport CountryPage from './countryPage';\r\nimport Header from './Header';\r\nimport Countries from './Countries';\r\nimport SearchForCountry from './SearchForCountry';\r\nimport FilterByRegion from './FilterByRegion';\r\n\r\n\r\nimport './App.css';\r\n\r\n\r\nconst getCountries = () => {\r\n    return new Promise((resolve,reject) => {\r\n        fetch('https://restcountries.eu/rest/v2/all?fields=name;population;region;capital;subregion;currencies;languages;borders;topLevelDomain;nativeName;alpha3Code;flag')\r\n        .then(data => data.json())\r\n        .then(listCountries => {\r\n        resolve(listCountries);\r\n      })\r\n        .catch((err)=>{\r\n            reject(err)\r\n        })\r\n    })\r\n}\r\n\r\nfunction App(){\r\n\r\n    const [countries, setListCountries] = useState([]);\r\n    const [searchedCountry, setSearchedCountry] = useState(\"\");\r\n    const [searchedRegion, setSearchedRegion] = useState(\"\");\r\n    const [isDarkMode, setDarkMode] = useState(false);\r\n\r\n    let darkModeMain = {\r\n      backgroundColor: \"hsl(207, 26%, 17%)\",\r\n      color: \"hsl(0, 0%, 100%)\"\r\n    }\r\n  \r\n    let darkModeElement = {\r\n      backgroundColor: \"hsl(209, 23%, 22%)\",\r\n      color:\"hsl(0, 0%, 100%)\",\r\n      boxShadow:\"none\"\r\n    }\r\n  \r\n    let darkHeader = {\r\n      backgroundColor: \"hsl(209, 23%, 22%)\",\r\n      borderBottom:\"none\",\r\n      color:\"hsl(0, 0%, 100%)\"\r\n    }\r\n    \r\n    let searchDark = {\r\n      boxShadow:\"none\",\r\n      backgroundColor: \"hsl(209, 23%, 22%)\",\r\n      color:\"hsl(0, 0%, 100%)\",\r\n      borderRadius:\"4px\"\r\n    }\r\n  \r\n    let linkStyleLight = {\r\n      textDecoration: \"none\",\r\n      color: \"hsl(200, 15%, 8%)\"\r\n    }\r\n  \r\n    let linkStyleDark = {\r\n      textDecoration: \"none\",\r\n      color:\"hsl(0, 0%, 100%)\"\r\n    }\r\n\r\n    let darkModeButton = {\r\n      boxShadow:\"0px 2px 5px 3px #292829\",\r\n      color:\"hsl(0, 0%, 100%)\"\r\n\r\n    }\r\n\r\n    const stylePopulationNb = (nb) => {\r\n      nb = nb.toString();\r\n      nb = nb.split(\"\").reverse().join(\"\");\r\n      let counter = 0;\r\n      let toReturn = \"\";\r\n      for(let i=0;i<nb.length;i++){\r\n        if(counter<3){\r\n          toReturn += nb[i];\r\n        } else if(counter===3){\r\n          toReturn += \",\";\r\n          toReturn += nb[i];\r\n          counter = 0;\r\n        }\r\n        counter += 1;\r\n    \r\n        }\r\n      return toReturn.split(\"\").reverse().join(\"\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(countries.length===0){\r\n            getCountries().then(data=> {\r\n            setListCountries(data);\r\n        })\r\n    }\r\n    },[]);\r\n\r\n    return(\r\n        <div className=\"App\" style={isDarkMode?darkModeMain:null}>\r\n            <Router>\r\n\r\n            <Switch> \r\n                {/* YEAAHH */}\r\n            {countries.map(item=>{\r\n                return(\r\n                <Route path={`/${item.name}`}>\r\n                    <Header setDarkMode={setDarkMode} isDarkMode={isDarkMode} darkHeader={darkHeader}/>\r\n                    <CountryPage country={item.name} countries={countries} setSearchedCountry={setSearchedCountry} searchedCountry={searchedCountry} isDarkMode={isDarkMode} darkModeElement={darkModeElement} darkModeButton={darkModeButton} stylePopulationNb={stylePopulationNb}/>\r\n                </Route>\r\n                );\r\n            })}    \r\n            \r\n\r\n\r\n                <Route path=\"/\">\r\n                    <Header setDarkMode={setDarkMode} isDarkMode={isDarkMode} darkHeader={darkHeader}/>\r\n                    <div className=\"mainWrap\">\r\n                      {countries.find(element=>element.name===searchedCountry)!==undefined?<CountryPage setSearchedCountry={setSearchedCountry} searchedCountry={searchedCountry} countries={countries} country={searchedCountry} isDarkMode={isDarkMode} darkModeElement={darkModeElement} darkModeButton={darkModeButton} stylePopulationNb={stylePopulationNb}/>\r\n                      :<React.Fragment><div className=\"searchItems\">\r\n                          <SearchForCountry countries={countries} setSearchedCountry={setSearchedCountry} searchedCountry={searchedCountry} isDarkMode={isDarkMode} setDarkMode={setDarkMode} searchDark={searchDark}/>\r\n                          <FilterByRegion setSearchedRegion={setSearchedRegion} searchedRegion={setSearchedRegion} isDarkMode={isDarkMode} setDarkMode={setDarkMode} searchDark={searchDark}/>\r\n                        </div>\r\n                        <Countries  countries={countries} searchedRegion={searchedRegion} isDarkMode={isDarkMode} darkModeElement={darkModeElement} linkStyleLight={linkStyleLight} linkStyleDark={linkStyleDark} stylePopulationNb={stylePopulationNb}/>\r\n                        </React.Fragment>\r\n                      }\r\n                    </div>\r\n                </Route>\r\n                </Switch>\r\n\r\n\r\n            </Router>\r\n\r\n            \r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}